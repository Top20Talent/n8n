pipeline {
    agent {
        node {
            label 'jenkins-slave'
        }
    }
    environment {
        K8S_CONFIG = credentials('crm-kube-config')
        GIT_TAG = sh(returnStdout: true,script: 'git rev-parse --short HEAD').trim()
    }
    stages {
        stage('Clone') {
           steps {
               echo "Clone Git Code"
               checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'github-credentials', url: 'https://github.com/Top20Talent/n8n.git']]])
           }
        }
        stage('Build Image') {
            when { 
                allOf {
                    expression { env.GIT_TAG != null }
                }
            }
            steps {
								sh "ls -l"
								sh "echo ${GIT_TAG}"
								sh "docker build -t registry.cn-shanghai.aliyuncs.com/cgp-application/n8n:${GIT_TAG} -f docker/images/n8n-custom/Dockerfile ."
								sh "docker push registry.cn-shanghai.aliyuncs.com/cgp-application/n8n:${GIT_TAG}"
            }
            
        }
        stage('Staging Deployment') {
            when { 
                allOf {
                    expression { env.GIT_TAG != null }
                }
            }
            steps {
                container ('kubectl') {
                    sh "mkdir -p ~/.kube"
                    sh "cp ${K8S_CONFIG} ~/.kube/config"
                    sh "kubectl get nodes"
                    sh "sed -i 's/GIT_TAG/${GIT_TAG}/g' deploy/charts/n8n/templates/stage/deployment.yaml"
                    sh "kubectl apply -f deploy/charts/n8n/templates/stage/deployment.yaml"
                }
            }
        }
        stage('Confirm production deployment') {
             steps {
                 input message: 'Confirm production deployment?', ok: 'Confirm'
             }
        }
        stage('Production Deployment') {
            when { 
                allOf {
                    expression { env.GIT_TAG != null }
                }
            }
            steps {
                container ('kubectl') {
                    sh "mkdir -p ~/.kube"
                    sh "cp ${K8S_CONFIG} ~/.kube/config"
                    sh "kubectl get nodes"
                    sh "sed -i 's/GIT_TAG/${GIT_TAG}/g' deploy/charts/n8n/templates/prod/deployment.yaml"
                    sh "kubectl apply -f deploy/charts/n8n/templates/prod/deployment.yaml"
                }
            }
        }
        
    }
}
